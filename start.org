** 使用说明
该文件所有镜像都是官方提供的单独文件，没有经过任何二次操作.

*** 多容器互访
**** link 方式
比如我们安装 nginx + php + mysql
在程序上的使用方式为 nginx 调用 php, php 调用 mysql
为此我们在建立容器时的顺序应该是 mysql -> php (关联mysql容器) -> nginx (关联 php 容器)

**** ip 方式
ip 访问，需要知道所有容器的IP （进入容器 ifconfig）

**** 共享网络
创建 bridge 网络访问
docker network create sharenet
docker run -it --name php ---network sharenet --network-alias php

查看网络是否挂载
docker network inspect sharenetwork


*** 服务重启
**** 重启容器
docker restart container-name
**** 重启服务
docker kill -s HUP container-name


** 开始安装
#+BEGIN_SRC bash
// docker 运行配置
network="sharenetwork"
docker_run="docker run -d -it --name"
// 使用桥接网络，并对当前容器网络命名
use_network_alias="--network $network --network-alias"

// 代码共享配置
code_dir="D:/Code"
reflact_code_dir="/web"

code_dir_map="-v $code_dir:$reflact_code_dir"

// nginx 共享配置
nginx_config="D:/Code/docker/nginx/nginx.conf"
nginx_config_d="D:/Code/docker/nginx/conf.d"

nginx_config_map="-v $nginx_config:/etc/nginx/nginx.conf -v $nginx_config_d:/etc/nginx/conf.d"
nginx_port_map="-p 80:80 -p 443:443"

// mysql 共享配置
mysql_data="D:/Code/docker/mysql/data"

mysql_data_map="-v $mysql_data:/var/lib/mysql"
mysql_port_map="-p 3306:3306"
mysql_root_password="-e MYSQL_ROOT_PASSWORD=123456"

// mongo 共享配置
mongo_data="D:/Code/docker/mongo/data"

mongo_data_map="-v $mongo_data:/data/db"
redis_port_map="-p 27017:27017"

// reids 共享配置
redis_data="D:/Code/docker/redis/data"

redis_data_map="-v $redis_data:/data"
redis_port_map="-p 6379:379"
// 运行reidis命令，并打开持久化配置
redis_server="redis-server --appendonly yes"

// centos linux运行环境
linux_port_map="-p 3000:3000" 


// 创建共享网络
docker network create $network

// 安装php
$docker_run php $code_dir_map $use_network_alias php php:7.1-fpm

// 安装nginx
$docker_run nginx $code_dir_map $nginx_config_map $nginx_port_map $use_network_alias nginx nginx:latest

// 安装mysql
$docker_run mysql $mysql_data_map $mysql_port_map $mysql_root_password $use_network_alias mysql mysql:5.7

// 安装mongo
$docker_run mongo $mongo_data_map $mongo_port_map $use_network_alias mongo mongo:latest

// 安装redis
$docker_run redis $redis_data_map $reis_prot_map $use_network_alias redis redis:3.2 $redis_server

// 安装centos linux 运行环境
$docker_run centos $code_dir_map $linux_port_map $use_network_alias centos centos:latest 
// 进入环境
docker exec -it centos bash

#+END_SRC

